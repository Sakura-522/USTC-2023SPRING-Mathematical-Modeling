【数学建模】课前编程热身练习说明


【课程简介】
数学建模是一门涉及到数学、计算、应用、优化、编程、软件等方面的综合性实践课程，也是未来从事科研工作及解决实际工程问题的基础。在下学期，我会通过授课及精心设计的作业等方式教会大家如下技能：
1. 数学建模的基本方法；
2. 科研方法的训练及科技论文的写作；
3. C++编程的基本能力；
4. Matlab/Mathematica软件使用；
5. Grasshopper软件使用；
6. 查找文献的基本方法等。

【课程主页】
      http://staff.ustc.edu.cn/~lgliu/Courses/MathModeling_2023_spring-summer/default.htm
其中有课程的所有相关信息和资料。

【C++课前热身练习】
这门课程的实践性很强，需要你具有较好的C++编程能力及使用相关数学和算法软件的能力，每周的作业编程量也较大；需要你能对算法、编程具有良好的兴趣和热情，并且能认真投入并实践，通过你自己的努力是能够在该学期内掌握较好的编程技巧及提高编程水平。该课的节奏会非常快，每周会有个编程作业，需要你们从一开始就全心投入。

为了能够在开学初很快适应该课的节奏，我建议各位在寒假期间就开始学习和打好C++编程的基础。如果你有C语言编程（面向过程编程）的能力，过渡到C++编程（面向对象编程）的习惯和能力的。为此，我布置了如下的课前热身的练习，并且也提供了参考代码供你参考和学习。

【C++课前热身练习的地址】
      1. 面向对象编程基础：https://github.com/Ubpa/USTC_CG/tree/master/Homeworks/0_CppPratices
      2. 窗口交互编程基础：https://github.com/Ubpa/USTC_CG/tree/master/Homeworks/1_MiniDraw

【提交时间】
      2023年3月5日星期日晚（课程的第一课为3月10日星期五）
      （作业提交方法在2月下旬会在课程主页上说明）

【C++热身练习1目标】
* 学会使用GitHub来管理和维护作业代码
* 学习使用 CMake 来搭建项目
* 学习使用 Visual Studio 2019 进行编程，学会其 debug 工具来调试代码
* 学习面向对象 C++ 编程，特别是类（ class ）的封装特性及构造函数、析构函数、函数重载、运算符重载等
* 熟悉 C++ 指针、动态内存分配、预编译头机制等
* 学习模板 template
* 学习STL的 vector、list、 map 等
* 学习静态库 lib，动态库 dll 的编写

【C++热身练习的学习方法】
该热身练习1包含5个小练习，学习方法：
1. 访问课程主页及课程作业布置系统，了解各种信息；
2. 构建自己本地的GitHub项目，将热身练习 clone 到本地；
3. 学习使用VS 2019及CMake来搭建项目及进行C++编程；
4. 按照热身练习的要求一个一个地完成5个小练习；注意具体方法：
* 认真阅读每个小练习的要求，独立地去做练习；
* 做好一个练习，认为没问题后，再去看参考代码，并对比比较看看自己哪方面的理解和代码需要提高；
* 完全理解该练习后，再开始做下一个练习。

【附加】
对于有一定C++编程基础（完成热身练习较快）的同学，亦可同时学习下Matlab或Mathematica软件的使用。
